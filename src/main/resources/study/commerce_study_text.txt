<< 이커머스 프로젝트 >>


============================== << 비밀키 노출시키지 않는 방법 >> ===============================
1. mailgunKey 변수 호출 자리에 하드코딩 (git commit 시 비밀키 노출됨)
2. application.properties 파일에서 변수로 관리 (git commit 시 비밀키 노출됨)
3. vm 옵션을 사용하기 (git commit 시 비밀키 노출되지 않음)
   - run버튼 > Edit Configurations > Build and run > Modified Options 클릭 > Add VM Options
     : -D 옵션을 사용해 프로퍼티 네임에 값을 입력해 주입 가능하도록함.
	 ex) -Dmailgun.key=key-비밀키

@Configuration
public class FeignConfig {

	@Value(value = "${mailgun.key}")
	private String mailgunKey;

	@Qualifier(value = "mailgun")
	@Bean
	public BasicAuthRequestInterceptor basicAuthRequestInterceptor() {
		return new BasicAuthRequestInterceptor("api", mailgunKey);
	}
}





============================== << 고객 회원가입 >> ===============================
1. Customer.java
   - 고객 정보를 담는 model
   - 회원가입 시 validation check에 대해 추가적으로 진행필요.
     ex) 전화번호, 이메일 등 기본적인 유효성검사.
   - 테스트코드 작성 시 SignUpForm.java 와 같이 Getter()만 존재하면 테스트가 사실상 쉽지는 않다.
     이런 경우는 필드들을 mocking해서 사용하는 것이 좋다.
     현재 프로젝트에서는 테스트코드 구현을 위해 단순히 SignUpForm에 builder, constructor 관련 어노테이션들을 사용한다.
     (추후 mocking으로 수정필요, mocking이 정석적인 방법임.)





